"""
This type stub file was generated by pyright.
"""

import io
import os
from typing import Optional, TYPE_CHECKING, Union

__all__ = ("File", )
class File:
    r"""A parameter object used for :meth:`abc.Messageable.send`
    for sending file objects.

    .. note::

        File objects are single use and are not meant to be reused in
        multiple :meth:`abc.Messageable.send`\s.

    Parameters
    ----------

    fp: Union[str, bytes, os.PathLike, io.BufferedIOBase]
        A file-like object opened in binary mode and read mode
        or a filename representing a file in the hard drive to
        open.

        .. note::

            If the file-like object passed is opened via ``open`` then the
            modes 'rb' should be used.

            To pass binary data, consider usage of ``io.BytesIO``.
    filename: Optional[:class:`str`]
        The filename to display when uploading to Discord.
        If this is not given then it defaults to ``fp.name`` or if ``fp`` is
        a string then the ``filename`` will default to the string given.
    description: Optional[:class:`str`]
        The description for the file. This is used to display alternative text
        in the Discord client.
    spoiler: :class:`bool`
        Whether the attachment is a spoiler.
    force_close: :class:`bool`
        Whether to forcibly close the bytes used to create the file
        when ``.close()`` is called.
        This will also make the file bytes unusable by flushing it from
        memory after it is sent once.
        Enable this if you don't wish to reuse the same bytes.

        .. versionadded:: 2.2

    Attributes
    ----------
    fp: Union[:class:`io.BufferedReader`, :class:`io.BufferedIOBase`]
        A file-like object opened in binary mode and read mode.
        This will be a :class:`io.BufferedIOBase` if an
        object of type :class:`io.IOBase` was passed, or a
        :class:`io.BufferedReader` if a filename was passed.
    filename: Optional[:class:`str`]
        The filename to display when uploading to Discord.
    description: Optional[:class:`str`]
        The description for the file. This is used to display alternative text
        in the Discord client.
    spoiler: :class:`bool`
        Whether the attachment is a spoiler.
    force_close: :class:`bool`
        Whether to forcibly close the bytes used to create the file
        when ``.close()`` is called.
        This will also make the file bytes unusable by flushing it from
        memory after it is sent or used once.
        Enable this if you don't wish to reuse the same bytes.

        .. versionadded:: 2.2
    """
    __slots__ = ...
    if TYPE_CHECKING:
        fp: Union[io.BufferedReader, io.BufferedIOBase]
        filename: Optional[str]
        description: Optional[str]
        spoiler: bool
        force_close: bool
        ...
    def __init__(self, fp: Union[str, bytes, os.PathLike, io.BufferedIOBase], filename: Optional[str] = ..., *, description: Optional[str] = ..., spoiler: bool = ..., force_close: bool = ...) -> None:
        ...
    
    def reset(self, *, seek: Union[int, bool] = ...) -> None:
        ...
    
    def close(self) -> None:
        ...
    


